plugins {
    id 'java'
    id 'jacoco'
    id 'checkstyle'
    id 'org.sonarqube' version '4.2.1.3168'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'com.google.cloud.tools.jib' version '3.3.2'

    // restDocs & Swagger Plugin
    id("com.epages.restdocs-api-spec") version "0.18.2"
}

version = "0.0.1"

group = 'com.e2i'

sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

checkstyle {
    toolVersion = '10.4'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.1.0'
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.4.1'

    // Query Details
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

    // Monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    implementation 'com.auth0:java-jwt:4.4.0'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    testImplementation 'org.projectlombok:lombok:1.18.26'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'

    implementation platform('software.amazon.awssdk:bom:2.20.26')

    implementation 'software.amazon.awssdk:sns:2.20.90'
    implementation 'software.amazon.awssdk:ses:2.20.86'
    implementation 'software.amazon.awssdk:s3:2.20.82'

    // REST - Assured
    testImplementation 'io.rest-assured:rest-assured:5.3.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    testImplementation 'it.ozimov:embedded-redis:0.7.2'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // Component that test code convert to Swagger file and include restDocs Api
    testImplementation('com.epages:restdocs-api-spec-mockmvc:0.18.2') //2.2
}

// Querydsl
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean {
    delete file(querydslDir)
}

// Set Swagger-ui description
openapi3 {
    setServers([
            {
                url = "http://localhost:8080"
                description = "LOCAL server"
            },
            {
                url = "http://ec2-52-78-215-171.ap-northeast-2.compute.amazonaws.com:8080"
                description = "Develop Server"
            },
            {
                url = "http://wemeet-elb-1696815651.ap-northeast-2.elb.amazonaws.com"
                description = "Production Server"
            }
    ])
    setTitle("We:meet")
    setDescription("We:meet API Documentation")
    setVersion("0.1.0")
    setFormat("yaml") // or json
}

// Add Gradle Task for generate .yaml file for API Doc
tasks.register('copyOasToSwagger', Copy) {
    delete "src/main/resources/static/swagger-ui/openapi3.yaml" // Delete the existing OAS file
    from "${buildDir}/api-spec/openapi3.yaml" // Specify the OAS file to be copied
    into "src/main/resources/static/swagger-ui/" // Copy the file to the target directory
    dependsOn "openapi3" // Set openapi3 task to be executed first
}


sonar {
    properties {
        property 'sonar.host.url', 'https://sonarcloud.io'
        property 'sonar.organization', 'swm-e2i'
        property 'sonar.projectKey', 'SWM-E2I_wemeet-backend'
        property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
        property 'sonar.java.checkstyle.reportPaths', 'build/reports/checkstyle/main.xml'
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

jib {
    def inputTag = project.hasProperty('inputTag') ? project.property('inputTag') : '0.0.0'

    from {
        image = 'eclipse-temurin:17-jdk-alpine'
    }
    to {
        image = '075584359222.dkr.ecr.ap-northeast-2.amazonaws.com/wemeet-dev-ecr'
        tags = [inputTag]
        credHelper = 'ecr-login'
    }
    container {
        creationTime = 'USE_CURRENT_TIMESTAMP'
        jvmFlags = ['-javaagent:/scouter.agent.jar', '-Dscouter.config=/spring-scouter.conf',
                    '-XX:+UseContainerSupport', '-Dserver.port=8080', '-Dfile.encoding=UTF-8', '-Duser.timezone=Asia/Seoul']
        ports = ['8080']
    }
}
