buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("com.dipien:semantic-version-gradle-plugin:2.0.0")
    }
}

plugins {
    id 'java'
    id 'jacoco'
    id 'checkstyle'
    id 'org.sonarqube' version '4.2.1.3168'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'com.google.cloud.tools.jib' version '3.3.2'
}

version = "0.0.3"
apply plugin: "com.dipien.semantic-version"

group = 'com.e2i'

sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

checkstyle {
    toolVersion = '10.4'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.flywaydb:flyway-core'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'

    implementation platform('software.amazon.awssdk:bom:2.20.26')
    implementation 'software.amazon.awssdk:sns:2.20.90'
    implementation 'software.amazon.awssdk:ses:2.20.86'
    implementation 'software.amazon.awssdk:s3:2.20.82'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

sonar {
    properties {
        property 'sonar.host.url', 'https://sonarcloud.io'
        property 'sonar.organization', 'swm-e2i'
        property 'sonar.projectKey', 'SWM-E2I_wemeet-backend'
        property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
        property 'sonar.java.checkstyle.reportPaths', 'build/reports/checkstyle/main.xml'
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

jib {
    from {
        image = 'eclipse-temurin:17-jdk-alpine'
    }
    to {
        image = '075584359222.dkr.ecr.ap-northeast-2.amazonaws.com/wemeet-dev-ecr'
        tags = ['wemeet-dev-image', "${project.version}".toString()]
        credHelper = 'ecr-login'
    }
    container {
        creationTime = 'USE_CURRENT_TIMESTAMP'
        jvmFlags = ['-XX:+UseContainerSupport', '-Dserver.port=8080', '-Dfile.encoding=UTF-8']
        ports = ['8080']
        user = 'nobody:nogroup'
    }
}
