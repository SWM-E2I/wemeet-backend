openapi: 3.0.1
info:
  title: We:meet
  description: We:meet API Documentation
  version: 0.1.0
servers:
- url: http://localhost:8080
  description: LOCAL server
- url: http://wemeet-elb-1696815651.ap-northeast-2.elb.amazonaws.com
  description: Develop Server
- url: http://wemeet-elb-1696815651.ap-northeast-2.elb.amazonaws.com
  description: Production Server
tags: []
paths:
  /test/register:
    post:
      tags:
      - 관리자 Controller
      summary: Test 사용자를 생성하고 AccessToken과 RefreshToken을 발급 받습니다!
      description: |2
            Test 사용자를 생성하고 AccessToken과 RefreshToken을 발급 받습니다.
            쿼리 파라미터 "fixture" 에 사용자 이름을 입력합니다.
            ex) ?fixture=KAI, ?fixture=RIM, ?fixture=SEYUN
      operationId: test-token-injection
      parameters:
        - name: fixture
          in: query
          description: ""
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/test-register486549215'
              examples:
                test-token-injection:
                  value: "{\"status\":\"SUCCESS\",\"message\":\"member register and\
                    \ access token injection success\",\"data\":{\"createdAt\":null,\"\
                    modifiedAt\":null,\"memberId\":3,\"memberCode\":\"4100\",\"nickname\"\
                    :\"kai\",\"gender\":\"MALE\",\"phoneNumber\":\"01012341234\",\"\
                    collegeInfo\":{\"college\":\"안양대학교\",\"collegeType\":\"공대\",\"\
                    admissionYear\":2017,\"mail\":\"pppp1234@anyang.ac.kr\"},\"preference\"\
                    :{\"startPreferenceAdmissionYear\":2019,\"endPreferenceAdmissionYear\"\
                    :2022,\"sameCollegeState\":true,\"drinkingOption\":true,\"preferenceMbti\"\
                    :\"ENTP\",\"avoidedFriends\":true},\"mbti\":\"INFJ\",\"introduction\"\
                    :\"hi\",\"credit\":100,\"team\":null,\"role\":\"USER\"}}"
  /test/access/{memberId}:
    post:
      tags:
      - 관리자 Controller
      summary: AccessToken 을 재발급 받습니다.
      description: |2
            AccessToken 을 재발급 받습니다.
            pathParameter 에 사용자 ID 를 넘겨주면, 해당 사용자의 AccessToken 을 재발급 받습니다.
            ex) /test/access/1 -> memberId 가 1 인 사용자의 AccessToken 재발급.
      operationId: AccessToken 재발급 테스트
      parameters:
      - name: memberId
        in: path
        description: ""
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/test-register486549215'
              examples:
                AccessToken 재발급 테스트:
                  value: "{\"status\":\"SUCCESS\",\"message\":\"Access Token Injection\
                    \ Success\",\"data\":null}"
  /v1/auth/refresh:
    post:
      tags:
      - 토큰 갱신 요청
      summary: "RefreshToken 을 사용하여 Access, Refresh Token을 갱신합니다."
      description: "    RefreshToken 을 사용하여 Access, Refresh Token을 갱신합니다. \n\n   \
        \ 현재 사용자의 memberId와 role, Cookie에 RefreshToken 값을 넘겨주어야합니다. \n\n"
      operationId: Refresh Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1-auth-refresh739147521'
            examples:
              Refresh Token:
                value: "{\"memberId\":100,\"role\":\"USER\"}"
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/v1-auth-refresh-1162606117'
              examples:
                Refresh Token:
                  value: "{\"status\":\"SUCCESS\",\"message\":\"RefreshToken 을 재발급\
                    하는데 성공했습니다.\",\"data\":null}"
  /v1/auth/phone/issue:
    post:
      tags:
      - 휴대폰 인증번호 발급
      summary: 휴대폰 인증번호를 발급하는 API 입니다.
      description: |2
            target 값으로 넘어온 휴대폰 번호에 SMS 인증 번호를 발송합니다.
      operationId: 휴대폰 인증번호 발급
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1-auth-phone-issue-817510993'
            examples:
              휴대폰 인증번호 발급:
                value: "{\"target\":\"01088990011\"}"
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1-auth-refresh-1162606117'
              examples:
                휴대폰 인증번호 발급:
                  value: "{\"status\":\"SUCCESS\",\"message\":\"인증 번호 발급 성공\",\"data\"\
                    :null}"
  /v1/auth/phone/validate:
    post:
      tags:
      - 휴대폰 인증번호 검증
      summary: 휴대폰 인증번호가 일치하는지 검증하는 API 입니다.
      description: "    SMS 인증 번호를 확인하는 API 입니다 \n\n    인증 번호가 일치하면 AccessToken 과\
        \ RefreshToken을 반환합니다 \n\n    인증 번호가 일치하지만 회원가입 되어있지 않은 사용자라면 Token을 반환하지\
        \ 않습니다\n"
      operationId: 휴대폰 인증번호 검증
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1-auth-phone-validate1564587931'
            examples:
              휴대폰 인증번호 검증:
                value: "{\"phone\":\"01088990011\",\"credential\":\"587838\"}"
      responses:
        "200":
          description: "200"
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/v1-auth-phone-validate-1065353198'
              examples:
                휴대폰 인증번호 검증:
                  value: "{\"status\":\"SUCCESS\",\"message\":\"인증에 성공하였습니다.\",\"\
                    data\":{\"registered\":false,\"memberId\":null,\"role\":[{\"authority\"\
                    :\"ROLE_GUEST\"}]}}"
components:
  securitySchemes:
    AccessToken:
      type: apiKey
      name: AccessToken
      in: header
  schemas:
    v1-auth-phone-validate-1065353198:
      type: object
      properties:
        data:
          type: object
          properties:
            role:
              type: array
              items:
                type: object
                properties:
                  authority:
                    type: string
                    description: 회원 권한
            registered:
              type: boolean
              description: 회원 가입 여부
          description: 회원 가입이 되어있지 않은 사용자의 경우 null로 채워서 반환됨
        message:
          type: string
          description: 응답 메시지
        status:
          type: string
          description: 응답 상태
    v1-auth-phone-validate1564587931:
      type: object
      properties:
        credential:
          type: string
          description: 인증 번호
        phone:
          type: string
          description: 휴대폰 번호
    v1-auth-phone-issue-817510993:
      type: object
      properties:
        target:
          type: string
          description: 휴대폰 번호
    v1-auth-refresh739147521:
      type: object
      properties:
        role:
          type: string
          description: 사용자 권한
        memberId:
          type: number
          description: 사용자 ID
    v1-auth-refresh-1162606117:
      type: object
      properties:
        message:
          type: string
          description: 응답 메시지
        status:
          type: string
          description: 응답 상태
    test-register486549215:
      type: object
